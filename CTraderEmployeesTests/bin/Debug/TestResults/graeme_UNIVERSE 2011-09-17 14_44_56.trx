<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="475daa73-d13d-4c81-8ef5-1831a3c6fc46" name="graeme@UNIVERSE 2011-09-17 14:44:56" runUser="Universe\graeme" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="e920189b-fed0-46c2-83c6-cc62807d3a99">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="graeme_UNIVERSE 2011-09-17 14_44_56" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2011-09-17T14:44:56.7677282+10:00" queuing="2011-09-17T14:44:57.2597564+10:00" start="2011-09-17T14:44:57.6777803+10:00" finish="2011-09-17T14:45:29.1355795+10:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="ConfigExists" storage="c:\users\graeme\documents\visual studio 2010\projects\ctraderemployees\ctraderemployeestests\bin\debug\ctraderemployeestests.dll" id="5dafe0aa-4690-22d9-56bc-90a1639b3f6b">
      <Execution timeOut="1800000" id="698fefdf-b60e-49d1-a421-8acb09ca8920" />
      <TestMethod codeBase="C:/Users/graeme/documents/visual studio 2010/Projects/CTraderEmployees/CTraderEmployeesTests/bin/Debug/CTraderEmployeesTests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="CTraderEmployeesTests.ConfigTests, CTraderEmployeesTests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ConfigExists" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="5dafe0aa-4690-22d9-56bc-90a1639b3f6b" executionId="698fefdf-b60e-49d1-a421-8acb09ca8920" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="698fefdf-b60e-49d1-a421-8acb09ca8920" testId="5dafe0aa-4690-22d9-56bc-90a1639b3f6b" testName="ConfigExists" computerName="UNIVERSE" duration="00:00:31.1473396" startTime="2011-09-17T14:44:57.7717856+10:00" endTime="2011-09-17T14:45:29.0455744+10:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="698fefdf-b60e-49d1-a421-8acb09ca8920">
      <Output>
        <ErrorInfo>
          <Message>Initialization method CTraderEmployeesTests.ConfigTests.CreateConfig threw exception. System.ArgumentException: System.ArgumentException: Illegal characters in path..</Message>
          <StackTrace>    at System.IO.Path.CheckInvalidPathChars(String path)
   at System.IO.Path.NormalizePath(String path, Boolean fullCheck, Int32 maxPathLength)
   at System.IO.Path.GetFullPathInternal(String path)
   at System.IO.FileInfo..ctor(String fileName)
   at CTraderEmployees.Models.Config.set_Path(String value) in C:\Users\graeme\documents\visual studio 2010\Projects\CTraderEmployees\CTraderEmployees\Models\Config.cs:line 15
   at CTraderEmployeesTests.ConfigTests.CreateConfig() in C:\Users\graeme\documents\visual studio 2010\Projects\CTraderEmployees\CTraderEmployeesTests\ConfigTests.cs:line 18
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>